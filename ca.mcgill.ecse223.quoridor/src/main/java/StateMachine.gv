// Code generated by Umple 1.29.0.4181.a593105a9

digraph "StateMachine" {
  compound = true;
  size="80,10"

  // Class: Quoridor

  // Class: Board

  // Class: Tile

  // Class: User

  // Class: Wall

  // Class: Player

  // Class: Game

  // Class: GamePosition

  // Class: Destination

  // Class: Move

  // Class: StepMove

  // Class: JumpMove

  // Class: WallMove

  // Class: PlayerPosition

  // Class: PawnBehavior

    // Top Level StateMachine: PawnSM
    
    // Start states are shown as a black circle
    node [shape = point, fillcolor="black", width=0.2 ];
    start_PawnBehavior_PawnSM [ tooltip = "Class PawnBehavior, SM PawnSM, State start" ];
    
        
    // Format for normal states
    node [shape = rectangle, width=1,style=rounded];
    
      // State: Playing

     subgraph clusterPawnBehavior_PawnSM_Playing {
      label = "Playing";
      style = rounded;

      // StateMachine: NorthSouth
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_PawnBehavior_NorthSouth [ tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: NorthSouth

       subgraph clusterPawnBehavior_PawnSMPlayingNorthSouth_NorthSouth {
        label = "NorthSouth";
        style = rounded;

        // Bottom Level StateMachine: NorthSouth
        
        // Start states are shown as a black circle
        node [shape = point, fillcolor="black", width=0.2 ];
        start_PawnBehavior_NorthSouth [ tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.start" ];
        
                
        // Format for normal states
        node [shape = rectangle, width=1,style=rounded];
        
          // State: Setup

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup [label = Setup, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.Setup"];
          // End State: Setup

          // State: SouthEdge

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge [label = SouthEdge, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.SouthEdge"];
          // End State: SouthEdge

          // State: SouthBorder

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder [label = SouthBorder, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.SouthBorder"];
          // End State: SouthBorder

          // State: MiddleNS

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [label = MiddleNS, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.MiddleNS"];
          // End State: MiddleNS

          // State: NorthBorder

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder [label = NorthBorder, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.NorthBorder"];
          // End State: NorthBorder

          // State: NorthEdge

          PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthEdge [label = NorthEdge, tooltip = "Class PawnBehavior, SM PawnSM, State NorthSouth.NorthSouth.NorthEdge"];
          // End State: NorthEdge
        // End Bottom Level StateMachine: NorthSouth
       }
        // End State: NorthSouth
      // End StateMachine: NorthSouth

      // StateMachine: EastWest
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_PawnBehavior_EastWest [ tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: EastWest

       subgraph clusterPawnBehavior_PawnSMPlayingEastWest_EastWest {
        label = "EastWest";
        style = rounded;

        // Bottom Level StateMachine: EastWest
        
        // Start states are shown as a black circle
        node [shape = point, fillcolor="black", width=0.2 ];
        start_PawnBehavior_EastWest [ tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.start" ];
        
                
        // Format for normal states
        node [shape = rectangle, width=1,style=rounded];
        
          // State: Setup

          PawnBehavior_PawnSMPlayingEastWestEastWest_Setup [label = Setup, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.Setup"];
          // End State: Setup

          // State: WestEdge

          PawnBehavior_PawnSMPlayingEastWestEastWest_WestEdge [label = WestEdge, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.WestEdge"];
          // End State: WestEdge

          // State: WestBorder

          PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder [label = WestBorder, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.WestBorder"];
          // End State: WestBorder

          // State: MiddleEW

          PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [label = MiddleEW, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.MiddleEW"];
          // End State: MiddleEW

          // State: EastBorder

          PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder [label = EastBorder, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.EastBorder"];
          // End State: EastBorder

          // State: EastEdge

          PawnBehavior_PawnSMPlayingEastWestEastWest_EastEdge [label = EastEdge, tooltip = "Class PawnBehavior, SM PawnSM, State EastWest.EastWest.EastEdge"];
          // End State: EastEdge
        // End Bottom Level StateMachine: EastWest
       }
        // End State: EastWest
      // End StateMachine: EastWest
     }
      // End State: Playing

      // State: Finished

      PawnBehavior_PawnSM_Finished [label = Finished, tooltip = "Class PawnBehavior, SM PawnSM, State Finished"];
      // End State: Finished
    // End Top Level StateMachine: PawnSM

  // All transitions
    start_PawnBehavior_PawnSM -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup [  lhead=clusterPawnBehavior_PawnSM_Playing,  tooltip = "start to Playing" ] ;
    start_PawnBehavior_NorthSouth -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup [  lhead=clusterPawnBehavior_PawnSMPlayingNorthSouth_NorthSouth,  tooltip = "start to NorthSouth.NorthSouth" ] ;
    start_PawnBehavior_NorthSouth -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup [  tooltip = "start to NorthSouth.NorthSouth.Setup" ] ;
    PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge [  label = "startGame [getPlayer().getGameAsWhite.equals(getCurrentGame())]", tooltip = "From NorthSouth.NorthSouth.Setup to NorthSouth.NorthSouth.SouthEdge on startGame&#13;Guard:  [getPlayer().getGameAsWhite.equals(getCurrentGame())]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge [  label = "stepDown [isLegalMove(MoveDirection.South)]", tooltip = "From NorthSouth.NorthSouth.SouthBorder to NorthSouth.NorthSouth.SouthEdge on stepDown&#13;Guard:  [isLegalMove(MoveDirection.South)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge [  label = "jumpDown [isLegalJump(MoveDirection.South) && getCurrentPawnRow() == 7]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.SouthEdge on jumpDown&#13;Guard:  [isLegalJump(MoveDirection.South) && getCurrentPawnRow() == 7]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder [  label = "stepUp [isLegalMove(MoveDirection.North)]", tooltip = "From NorthSouth.NorthSouth.SouthEdge to NorthSouth.NorthSouth.SouthBorder on stepUp&#13;Guard:  [isLegalMove(MoveDirection.North)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder [  label = "stepDown [isLegalMove(MoveDirection.South) && getCurrentPawnRow() == 7]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.SouthBorder on stepDown&#13;Guard:  [isLegalMove(MoveDirection.South) && getCurrentPawnRow() == 7]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder [  label = "jumpDown [isLegalJump(MoveDirection.South) && getCurrentPawnRow() == 6]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.SouthBorder on jumpDown&#13;Guard:  [isLegalJump(MoveDirection.South) && getCurrentPawnRow() == 6]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthEdge -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpUp [isLegalJump(MoveDirection.North)]", tooltip = "From NorthSouth.NorthSouth.SouthEdge to NorthSouth.NorthSouth.MiddleNS on jumpUp&#13;Guard:  [isLegalJump(MoveDirection.North)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "stepUp [isLegalMove(MoveDirection.North)]", tooltip = "From NorthSouth.NorthSouth.SouthBorder to NorthSouth.NorthSouth.MiddleNS on stepUp&#13;Guard:  [isLegalMove(MoveDirection.North)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_SouthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpUp [isLegalJump(MoveDirection.North)]", tooltip = "From NorthSouth.NorthSouth.SouthBorder to NorthSouth.NorthSouth.MiddleNS on jumpUp&#13;Guard:  [isLegalJump(MoveDirection.North)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "stepUp [isLegalMove(MoveDirection.North) && getCurrentPawnRow() >= 4 && getCurrentPawnRow() <= 7]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.MiddleNS on stepUp&#13;Guard:  [isLegalMove(MoveDirection.North) && getCurrentPawnRow() >= 4 && getCurrentPawnRow() <= 7]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "stepDown [isLegalMove(MoveDirection.South) && getCurrentPawnRow() >= 3 && getCurrentPawnRow() <= 6]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.MiddleNS on stepDown&#13;Guard:  [isLegalMove(MoveDirection.South) && getCurrentPawnRow() >= 3 && getCurrentPawnRow() <= 6]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpUp [isLegalJump(MoveDirection.North) && getCurrentPawnRow() >= 5 && getCurrentPawnRow() <= 7]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.MiddleNS on jumpUp&#13;Guard:  [isLegalJump(MoveDirection.North) && getCurrentPawnRow() >= 5 && getCurrentPawnRow() <= 7]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpDown [isLegalJump(MoveDirection.South) && getCurrentPawnRow() >= 3 && getCurrentPawnRow() <= 5]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.MiddleNS on jumpDown&#13;Guard:  [isLegalJump(MoveDirection.South) && getCurrentPawnRow() >= 3 && getCurrentPawnRow() <= 5]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "stepDown [isLegalMove(MoveDirection.South)]", tooltip = "From NorthSouth.NorthSouth.NorthBorder to NorthSouth.NorthSouth.MiddleNS on stepDown&#13;Guard:  [isLegalMove(MoveDirection.South)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpDown [isLegalJump(MoveDirection.South)]", tooltip = "From NorthSouth.NorthSouth.NorthBorder to NorthSouth.NorthSouth.MiddleNS on jumpDown&#13;Guard:  [isLegalJump(MoveDirection.South)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthEdge -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS [  label = "jumpDown [isLegalJump(MoveDirection.South)]", tooltip = "From NorthSouth.NorthSouth.NorthEdge to NorthSouth.NorthSouth.MiddleNS on jumpDown&#13;Guard:  [isLegalJump(MoveDirection.South)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder [  label = "stepUp [isLegalMove(MoveDirection.North) && getCurrentPawnRow() == 3]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.NorthBorder on stepUp&#13;Guard:  [isLegalMove(MoveDirection.North) && getCurrentPawnRow() == 3]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder [  label = "jumpUp [isLegalJump(MoveDirection.North) && getCurrentPawnRow() == 4]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.NorthBorder on jumpUp&#13;Guard:  [isLegalJump(MoveDirection.North) && getCurrentPawnRow() == 4]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthEdge -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder [  label = "stepDown [isLegalMove(MoveDirection.South)]", tooltip = "From NorthSouth.NorthSouth.NorthEdge to NorthSouth.NorthSouth.NorthBorder on stepDown&#13;Guard:  [isLegalMove(MoveDirection.South)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_MiddleNS -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthEdge [  label = "jumpUp [isLegalJump(MoveDirection.North) && getCurrentPawnRow() == 3]", tooltip = "From NorthSouth.NorthSouth.MiddleNS to NorthSouth.NorthSouth.NorthEdge on jumpUp&#13;Guard:  [isLegalJump(MoveDirection.North) && getCurrentPawnRow() == 3]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthBorder -> PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_NorthEdge [  label = "stepUp [isLegalMove(MoveDirection.North)]", tooltip = "From NorthSouth.NorthSouth.NorthBorder to NorthSouth.NorthSouth.NorthEdge on stepUp&#13;Guard:  [isLegalMove(MoveDirection.North)]" ] ;
  
  start_PawnBehavior_EastWest -> PawnBehavior_PawnSMPlayingEastWestEastWest_Setup [  lhead=clusterPawnBehavior_PawnSMPlayingEastWest_EastWest,  tooltip = "start to EastWest.EastWest" ] ;
    start_PawnBehavior_EastWest -> PawnBehavior_PawnSMPlayingEastWestEastWest_Setup [  tooltip = "start to EastWest.EastWest.Setup" ] ;
    PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_WestEdge [  label = "stepLeft [isLegalMove(MoveDirection.West)]", tooltip = "From EastWest.EastWest.WestBorder to EastWest.EastWest.WestEdge on stepLeft&#13;Guard:  [isLegalMove(MoveDirection.West)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_WestEdge [  label = "jumpLeft [isLegalJump(MoveDirection.West) && getCurrentPawnColumn() == 3]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.WestEdge on jumpLeft&#13;Guard:  [isLegalJump(MoveDirection.West) && getCurrentPawnColumn() == 3]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_WestEdge -> PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder [  label = "stepRight [isLegalMove(MoveDirection.East)]", tooltip = "From EastWest.EastWest.WestEdge to EastWest.EastWest.WestBorder on stepRight&#13;Guard:  [isLegalMove(MoveDirection.East)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder [  label = "stepLeft [isLegalMove(MoveDirection.West) && getCurrentPawnColumn() == 3]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.WestBorder on stepLeft&#13;Guard:  [isLegalMove(MoveDirection.West) && getCurrentPawnColumn() == 3]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder [  label = "jumpLeft [isLegalJump(MoveDirection.West) && getCurrentPawnColumn() == 4]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.WestBorder on jumpLeft&#13;Guard:  [isLegalJump(MoveDirection.West) && getCurrentPawnColumn() == 4]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_Setup -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "startGame", tooltip = "From EastWest.EastWest.Setup to EastWest.EastWest.MiddleEW on startGame" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_WestEdge -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpRight [isLegalJump(MoveDirection.East)]", tooltip = "From EastWest.EastWest.WestEdge to EastWest.EastWest.MiddleEW on jumpRight&#13;Guard:  [isLegalJump(MoveDirection.East)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "stepRight [isLegalMove(MoveDirection.East)]", tooltip = "From EastWest.EastWest.WestBorder to EastWest.EastWest.MiddleEW on stepRight&#13;Guard:  [isLegalMove(MoveDirection.East)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_WestBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpRight [isLegalJump(MoveDirection.East)]", tooltip = "From EastWest.EastWest.WestBorder to EastWest.EastWest.MiddleEW on jumpRight&#13;Guard:  [isLegalJump(MoveDirection.East)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpRight [getCurrentPawnColumn() >= 3 && getCurrentPawnColumn() <= 5]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.MiddleEW on jumpRight&#13;Guard:  [getCurrentPawnColumn() >= 3 && getCurrentPawnColumn() <= 5]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpLeft [isLegalJump(MoveDirection.West) && isLegalJump(MoveDirection.West) && getCurrentPawnColumn() >= 5 && getCurrentPawnColumn() <= 7]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.MiddleEW on jumpLeft&#13;Guard:  [isLegalJump(MoveDirection.West) && isLegalJump(MoveDirection.West) && getCurrentPawnColumn() >= 5 && getCurrentPawnColumn() <= 7]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "stepRight [isLegalMove(MoveDirection.East) && getCurrentPawnColumn() >= 3 && Column() <= 6]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.MiddleEW on stepRight&#13;Guard:  [isLegalMove(MoveDirection.East) && getCurrentPawnColumn() >= 3 && Column() <= 6]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "stepLeft [isLegalMove(MoveDirection.West) && getCurrentPawnColumn() >= 4 && getCurrentPawnColumn() <= 7]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.MiddleEW on stepLeft&#13;Guard:  [isLegalMove(MoveDirection.West) && getCurrentPawnColumn() >= 4 && getCurrentPawnColumn() <= 7]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "stepLeft [isLegalMove(MoveDirection.West)]", tooltip = "From EastWest.EastWest.EastBorder to EastWest.EastWest.MiddleEW on stepLeft&#13;Guard:  [isLegalMove(MoveDirection.West)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpLeft [isLegalJump(MoveDirection.West)]", tooltip = "From EastWest.EastWest.EastBorder to EastWest.EastWest.MiddleEW on jumpLeft&#13;Guard:  [isLegalJump(MoveDirection.West)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_EastEdge -> PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW [  label = "jumpLeft [isLegalJump(MoveDirection.West)]", tooltip = "From EastWest.EastWest.EastEdge to EastWest.EastWest.MiddleEW on jumpLeft&#13;Guard:  [isLegalJump(MoveDirection.West)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder [  label = "stepRight [isLegalMove(MoveDirection.East) && getCurrentPawnColumn() == 7]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.EastBorder on stepRight&#13;Guard:  [isLegalMove(MoveDirection.East) && getCurrentPawnColumn() == 7]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder [  label = "jumpRight [isLegalJump(MoveDirection.East) && getCurrentPawnColumn() == 6]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.EastBorder on jumpRight&#13;Guard:  [isLegalJump(MoveDirection.East) && getCurrentPawnColumn() == 6]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_EastEdge -> PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder [  label = "stepLeft [isLegalMove(MoveDirection.West)]", tooltip = "From EastWest.EastWest.EastEdge to EastWest.EastWest.EastBorder on stepLeft&#13;Guard:  [isLegalMove(MoveDirection.West)]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_MiddleEW -> PawnBehavior_PawnSMPlayingEastWestEastWest_EastEdge [  label = "jumpRight [isLegalJump(MoveDirection.East) && getCurrentPawnColumn() == 7]", tooltip = "From EastWest.EastWest.MiddleEW to EastWest.EastWest.EastEdge on jumpRight&#13;Guard:  [isLegalJump(MoveDirection.East) && getCurrentPawnColumn() == 7]" ] ;
  
  PawnBehavior_PawnSMPlayingEastWestEastWest_EastBorder -> PawnBehavior_PawnSMPlayingEastWestEastWest_EastEdge [  label = "stepRight [isLegalMove(MoveDirection.East)]", tooltip = "From EastWest.EastWest.EastBorder to EastWest.EastWest.EastEdge on stepRight&#13;Guard:  [isLegalMove(MoveDirection.East)]" ] ;
  
  PawnBehavior_PawnSMPlayingNorthSouthNorthSouth_Setup -> PawnBehavior_PawnSM_Finished [  ltail=clusterPawnBehavior_PawnSM_Playing,  label = "finishGame", tooltip = "From Playing to Finished on finishGame" ] ;
  

}
